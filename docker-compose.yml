version: '3.8'

services:
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "80:80"
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - policy-service
      - claims-service
      - customer-service
      - billing-service
      - analytics-service
      - mysql

  policy-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - SERVICE_NAME=policy-service
      - DB_HOST=mysql
      - DB_NAME=policy_service
    depends_on:
      - mysql

  claims-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - SERVICE_NAME=claims-service
      - DB_HOST=mysql
      - DB_NAME=claims_service
    depends_on:
      - mysql

  customer-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - SERVICE_NAME=customer-service
      - DB_HOST=mysql
      - DB_NAME=customer_service
    depends_on:
      - mysql

  billing-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - SERVICE_NAME=billing-service
      - DB_HOST=mysql
      - DB_NAME=billing_service
    depends_on:
      - mysql

  analytics-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - SERVICE_NAME=analytics-service
      - DB_HOST=mysql
      - DB_NAME=analytics_service
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=insurance_user
      - MYSQL_PASSWORD=insurance_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"

volumes:
  mysql-data: